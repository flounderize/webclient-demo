server:
  port: 8080
  shutdown: graceful

spring:
  application:
    name: webclient-demo
  
  # 数据源配置
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
    
  # H2 控制台配置
  h2:
    console:
      enabled: true
      path: /h2-console
      
  # SQL 初始化
  sql:
    init:
      mode: never

# MyBatis 配置
mybatis:
  mapper-locations: classpath:mapper/**/*.xml
  type-aliases-package: com.example.webclient.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

# MyBatis-Plus 配置
mybatis-plus:
  global-config:
    db-config:
      id-type: auto
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0

# WebClient 配置
webclient:
  # 基础URL（可根据环境覆盖）
  base-url: http://localhost:8080
  
  # 连接配置
  connection-timeout: 5000
  read-timeout: 30000
  write-timeout: 30000
  max-connections: 500
  max-idle-time: 20
  max-memory-size: 16777216
  
  # 认证配置
  auth:
    type: none
    token: ""
    api-key: ""
    api-key-header: X-API-Key
    username: ""
    password: ""

# 日志配置
logging:
  level:
    root: INFO
    com.example.webclient: DEBUG
    org.springframework.web.reactive.function.client: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Actuator 配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev

webclient:
  base-url: http://localhost:8080
  auth:
    type: none

logging:
  level:
    com.example.webclient: DEBUG

---
# 测试环境配置
spring:
  config:
    activate:
      on-profile: test

webclient:
  base-url: http://test-api.example.com
  auth:
    type: apikey
    api-key: test-api-key

---
# 生产环境配置
spring:
  config:
    activate:
      on-profile: prod

webclient:
  base-url: http://api.example.com
  auth:
    type: bearer
    token: ${API_TOKEN:}

logging:
  level:
    root: WARN
    com.example.webclient: INFO
